name: Sync ACG to Consumer Repos

on:
  workflow_dispatch:
    inputs:
      repos:
        description: 'Target repos'
        default: 'all'
        type: choice
        options: ['all', 'acg-tooling-consumer', 'acg-tooling-consumer1']
      branch:
        description: 'Target branch'
        default: 'develop'
        type: choice
        options: ['develop', 'master', '<<feature branch>>']
      custom_branch:
        description: 'Add "<<feature branch>>" name'
        required: false
        type: string

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [acg-tooling-consumer, acg-tooling-consumer1]
      fail-fast: false

    steps:
    - name: Skip if not selected
      if: inputs.repos != 'all' && inputs.repos != matrix.repo
      run: exit 0

    - name: Determine target branch
      id: branch
      run: |
        if [ "${{ inputs.branch }}" = "feature branch" ]; then
          echo "target_branch=${{ inputs.custom_branch }}" >> $GITHUB_OUTPUT
        else
          echo "target_branch=${{ inputs.branch }}" >> $GITHUB_OUTPUT
        fi


    - name: Checkout ACG repo
      uses: actions/checkout@v4
      with:
        path: acg

    - name: Checkout target repo
      uses: actions/checkout@v4
      with:
        repository: loy-misquith-frequence/${{ matrix.repo }}
        token: ${{ secrets.ACG_SYNC_TOKEN }}
        ref: ${{ steps.branch.outputs.target_branch }}
        path: target

    - name: Sync Claude config (.claude folder)
      run: |
        cd target
        rsync -av --delete ../acg/.claude/ .claude/

    - name: Sync shared AI folders 
      run: |
        cd target
        mkdir -p ai

        echo "Syncing shared AI context..."
        rsync -av --delete --exclude=*_context/ --exclude=tickets/ ../acg/ai/ ai/

    - name: Sync repo-specific AI context
      run: |
        cd target
        REPO_CONTEXT="../acg/ai/${{ matrix.repo }}_context"
        if [ -d "$REPO_CONTEXT" ] && [ "$(ls -A $REPO_CONTEXT)" ]; then
          echo "Syncing repo-specific context: ${{ matrix.repo }}_context"
          rsync -av --exclude=tickets/ "$REPO_CONTEXT/" ai/context/
        else
          echo "No repo-specific context found for ${{ matrix.repo }}"
        fi

    - name: Commit changes
      run: |
        cd target
        git config user.name "ACG Sync Bot"
        git config user.email "acg-bot@frequence.com"

        git add .claude ai
        if ! git diff --cached --quiet; then
          git commit -m "Update ACG tooling from central repo"
          echo "Changes committed"
        else
          echo "No changes to commit"
        fi

    - name: Push changes
      run: |
        cd target
        git push origin ${{ steps.branch.outputs.target_branch }}
        echo "Changes pushed successfully"
